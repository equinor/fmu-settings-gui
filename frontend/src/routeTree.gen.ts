/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as IndexImport } from "./routes/index";
import { Route as UserKeysImport } from "./routes/user/keys";
import { Route as ProjectOverviewImport } from "./routes/project/overview";
import { Route as ProjectMasterdataImport } from "./routes/project/masterdata";

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const UserKeysRoute = UserKeysImport.update({
  id: "/user/keys",
  path: "/user/keys",
  getParentRoute: () => rootRoute,
} as any);

const ProjectOverviewRoute = ProjectOverviewImport.update({
  id: "/project/overview",
  path: "/project/overview",
  getParentRoute: () => rootRoute,
} as any);

const ProjectMasterdataRoute = ProjectMasterdataImport.update({
  id: "/project/masterdata",
  path: "/project/masterdata",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/project/masterdata": {
      id: "/project/masterdata";
      path: "/project/masterdata";
      fullPath: "/project/masterdata";
      preLoaderRoute: typeof ProjectMasterdataImport;
      parentRoute: typeof rootRoute;
    };
    "/project/overview": {
      id: "/project/overview";
      path: "/project/overview";
      fullPath: "/project/overview";
      preLoaderRoute: typeof ProjectOverviewImport;
      parentRoute: typeof rootRoute;
    };
    "/user/keys": {
      id: "/user/keys";
      path: "/user/keys";
      fullPath: "/user/keys";
      preLoaderRoute: typeof UserKeysImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/project/masterdata": typeof ProjectMasterdataRoute;
  "/project/overview": typeof ProjectOverviewRoute;
  "/user/keys": typeof UserKeysRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/project/masterdata": typeof ProjectMasterdataRoute;
  "/project/overview": typeof ProjectOverviewRoute;
  "/user/keys": typeof UserKeysRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/project/masterdata": typeof ProjectMasterdataRoute;
  "/project/overview": typeof ProjectOverviewRoute;
  "/user/keys": typeof UserKeysRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/project/masterdata" | "/project/overview" | "/user/keys";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/project/masterdata" | "/project/overview" | "/user/keys";
  id:
    | "__root__"
    | "/"
    | "/project/masterdata"
    | "/project/overview"
    | "/user/keys";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  ProjectMasterdataRoute: typeof ProjectMasterdataRoute;
  ProjectOverviewRoute: typeof ProjectOverviewRoute;
  UserKeysRoute: typeof UserKeysRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProjectMasterdataRoute: ProjectMasterdataRoute,
  ProjectOverviewRoute: ProjectOverviewRoute,
  UserKeysRoute: UserKeysRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/project/masterdata",
        "/project/overview",
        "/user/keys"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/project/masterdata": {
      "filePath": "project/masterdata.tsx"
    },
    "/project/overview": {
      "filePath": "project/overview.tsx"
    },
    "/user/keys": {
      "filePath": "user/keys.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
